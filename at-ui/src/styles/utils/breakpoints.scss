@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';

@import './polyFluidSizing/fluid';

/* stylelint-disable media-feature-name-blacklist */
$breakpoints: (
  'xxs': 320,
  'mob': 375,
  'tab': 768,
  'm': 960,
  'l': 1280,
  'xl': 1440,
  'xxl': 1920,
  'xxxl': 2560,
  'fourk': 3840,
);

@function convertSize($size) {
  @if meta.type-of($size) == 'string' {
    @if not map.has-key($breakpoints, $size) {
      @error 'Size not found in breakpoints';
    }

    @return map.get($breakpoints, $size) * 1px;
  } @else {
    @return $size;
  }
}

@mixin larger($breakpoint, $dimension: 'width') {
  @media (min-#{$dimension}: convertSize($breakpoint)) {
    @content;
  }
}

@mixin smaller($breakpoint, $dimension: 'width') {
  @media (max-#{$dimension}: convertSize($breakpoint)) {
    @content;
  }
}

@mixin between($min, $max, $dimension: 'width') {
  @media (min-#{$dimension}: convertSize($min)) and (max-#{$dimension}: convertSize($max)) {
    @content;
  }
}

@mixin rotate() {
  @media (orientation: landscape) and (max-width: 1024px) and (max-height: 600px) {
    @content;
  }
}

@mixin generateBreakpoints($className) {
  $keys: map.keys($breakpoints);
  $length: list.length($keys);

  @for $i from 1 through ($length - 1) {
    $key: list.nth($keys, $i);

    @include smaller($key) {
      .#{$key}\:#{$className} {
        @content;
      }
    }
  }
}
